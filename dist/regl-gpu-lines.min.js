!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).reglLines=n()}(this,(function(){"use strict";var e={CAP_START:0,CAP_END:1,CAP_SHORT:2};const n=e;var t=function(e,t,o,i,r,s,a,f,p,c,l,d){const u=t?f:a,v=["B","C","D"];t||v.unshift("A");const h={},m={},g=p.concat(u.attrs);if(i){m.vao=e.prop("vao");for(let e=0;e<g.length;e++)h[g[e].name]=e}else for(const e of g)h[e.name]=e.spec;const y=o?t?e=>[e.capRes2,Math.max(e.capRes2,e.joinRes2)]:e=>[Math.max(e.capRes2,e.joinRes2),Math.max(e.capRes2,e.joinRes2)]:t?e=>[e.capRes2,e.joinRes2]:e=>[e.joinRes2,e.joinRes2];return e({vert:`${r.glsl}const float CAP_START=${n.CAP_START}.0;const float CAP_END=${n.CAP_END}.0;${u.glsl}attribute float index;${d?"attribute float debugInstanceID;":""}uniform bool _isRound;uniform vec2 _vertCnt2,_capJoinRes2;uniform vec2 _resolution,_capScale;uniform float _miterLimit;${r.orientation||!t?"":"uniform float _orientation;"}varying vec3 lineCoord;${d?"varying vec2 triStripCoord;":""}${d?"varying float instanceID;":""}${d?"varying float vertexIndex;":""}bool isnan(float val){return(val<0.0||0.0<val||val==0.0)?false:true;}bool invalid(vec4 p){return p.w==0.0||isnan(p.x);}void main(){const float pi=3.141592653589793;${d?"vertexIndex=index;":""}lineCoord=vec3(0);${d?`instanceID=${t?"-1.0":"debugInstanceID"};`:""}${d?"triStripCoord=vec2(floor(index/2.0),mod(index,2.0));":""}${v.map((e=>`vec4 p${e}=${r.position.generate(r,e)};`)).join("\n")}gl_Position=pB;bool aInvalid=${t?"false":"invalid(pA)"};bool bInvalid=invalid(pB);bool cInvalid=invalid(pC);bool dInvalid=invalid(pD);vec2 v=_vertCnt2+3.0;float N=dot(v,vec2(1));bool mirror=index>=v.x;${t?"if(dInvalid && mirror)return;":""}float pw=mirror?pC.w:pB.w;${v.map((e=>`p${e}=vec4(vec3(p${e}.xy*_resolution,p${e}.z)/p${e}.w,1);`)).join("\n")}${t?"vec4 pA=pC;":""}if(bInvalid||cInvalid||max(abs(pB.z),abs(pC.z))>1.0)return;if(mirror){vec4 vTmp=pC; pC=pB; pB=vTmp;vTmp=pD; pD=pA; pA=vTmp;bool bTmp=dInvalid; dInvalid=aInvalid; aInvalid=bTmp;}${t?"bool isCap=!mirror;":(o?"":"const ")+"bool isCap=false"};if(aInvalid){ ${o?"pA=pC; isCap=true;":"pA=2.0*pB-pC;"} }if(dInvalid){ ${o?"pD=pB;":"pD=2.0*pC-pB;"} }bool roundOrCap=_isRound||isCap;float width=mirror?${r.width.generate(r,"C")}:${r.width.generate(r,"B")};vec2 tBC=pC.xy-pB.xy;float lBC=length(tBC);tBC/=lBC;vec2 nBC=vec2(-tBC.y,tBC.x);vec2 tAB=pB.xy-pA.xy;float lAB=length(tAB);if(lAB>0.0)tAB/=lAB;vec2 nAB=vec2(-tAB.y,tAB.x);vec2 tCD=pD.xy-pC.xy;float lCD=length(tCD);if(lCD>0.0)tCD/=lCD;vec2 nCD=vec2(-tCD.y,tCD.x);float cosB=clamp(dot(tAB,tBC),-1.0,1.0);const float tol=1e-4;float mirrorSign=mirror?-1.0:1.0;float dirB=-dot(tBC,nAB);float dirC=dot(tBC,nCD);bool bCollinear=abs(dirB)<tol;bool cCollinear=abs(dirC)<tol;bool bIsHairpin=bCollinear && cosB<0.0;dirB=bCollinear?-mirrorSign:sign(dirB);dirC=cCollinear?-mirrorSign:sign(dirC);vec2 miter=bIsHairpin?-tBC:0.5*(nAB+nBC)*dirB;float i=mirror?N-index:index;float res=(isCap?_capJoinRes2.x:_capJoinRes2.y);i-=max(0.0,(mirror?_vertCnt2.y:_vertCnt2.x)-res);i+=(dirB<0.0?-1.0:0.0);i-=mirror?1.0:0.0;i=max(0.0,i);vec2 xBasis=tBC;vec2 yBasis=nBC*dirB;vec2 xy=vec2(0);lineCoord.y=dirB*mirrorSign;if(i==res+1.0){float m=cosB>-0.9999?(tAB.x*tBC.y-tAB.y*tBC.x)/(1.0+cosB):0.0;xy=vec2(min(abs(m),min(lBC,lAB)/width),-1);lineCoord.y=-lineCoord.y;} else {float m2=dot(miter,miter);float lm=sqrt(m2);yBasis=miter/lm;xBasis=dirB*vec2(yBasis.y,-yBasis.x);bool isBevel=1.0>_miterLimit*m2;if(mod(i,2.0)==0.0){if(roundOrCap||i !=0.0){float theta=-0.5*(acos(cosB)*(clamp(i,0.0,res)/res)-pi)*(isCap?2.0:1.0);xy=vec2(cos(theta),sin(theta));if(isCap){if(xy.y>0.001)xy*=_capScale;lineCoord.xy=xy.yx*lineCoord.y;}} else {yBasis=bIsHairpin?vec2(0):miter;xy.y=isBevel?1.0:1.0/m2;}} else {lineCoord.y=0.0;if(isBevel && !roundOrCap){xy.y=-1.0+sqrt((1.0+cosB)*0.5);}}}${t?`float _orientation=${r.orientation?r.orientation.generate(r,""):"mod(_orientation,2.0)"};`:""};${t?"if(_orientation==CAP_END)lineCoord.xy=-lineCoord.xy;":""}vec2 dP=mat2(xBasis,yBasis)*xy;float dx=dot(dP,tBC)*mirrorSign;float useC=(mirror?1.0:0.0)+dx*(width/lBC);lineCoord.z=useC<0.0||useC>1.0?1.0:0.0;${[...r.varyings.values()].map((e=>e.generate(r,"useC","B","C"))).join("\n")}gl_Position=pB;gl_Position.xy+=width*dP;gl_Position.xy/=_resolution;gl_Position*=pw;${r.postproject?`gl_Position=${r.postproject}(gl_Position);`:""}}`,frag:s,attributes:h,uniforms:{...l,_vertCnt2:(e,n)=>y(n),_capJoinRes2:(e,n)=>[n.capRes2,n.joinRes2],_miterLimit:(e,n)=>n.miterLimit*n.miterLimit,_orientation:e.prop("orientation"),_capScale:e.prop("capScale"),_isRound:(e,n)=>"round"===n.join,_resolution:(e,n)=>n.viewportSize||[e.viewportWidth,e.viewportHeight]},primitive:"triangle strip",instances:t?(e,t)=>t.instances*(t.splitCaps?t.orientation===n.CAP_START?Math.ceil(t.count/2):Math.floor(t.count/2):t.count):(e,n)=>n.instances*(n.count-3),count:(e,n)=>{const t=y(n);return 6+(t[0]+t[1])},...c,...m})};var o={NONE:0,REGULAR:1,EXTENDED:2,PER_INSTANCE:4};const i=o;var r=function(e){const n=[],t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=t[e].replace(s,(function(e,t){return n.push(d(t)),""}));return{glsl:t.join("\n").trim(),...u(n)}};const s=/^\s*#pragma\s+lines\s*:\s*([^;]*);?$/i,a=/^\s*(?:(instance)?)\s*attribute\s+(float|vec2|vec3|vec4)\s+([\w\d_]+)\s*$/i,f=/^\s*(position|width|orientation)\s+=\s+([\w\d_]+)\s*\(([^)]*)\)\s*$/i,p=/^\s*(?:(extrapolate)?)\s*varying\s+(float|vec2|vec3|vec4)\s+([\w\d_]+)\s*=\s*([\w\d_]+)\(([^)]*)\)\s*$/,c=/^\s*postproject\s+=\s+([\w\d_]+)\s*$/i,l={float:1,vec2:2,vec3:3,vec4:4};function d(e){let n;if(n=(e=e.trim()).match(a)){const e=!!n[1];return{type:"attribute",dimension:l[n[2]],name:n[3],isInstanceAttr:e}}if(n=e.match(f)){const e=n[1],t={width:"float",position:"vec4",orientation:"bool"}[e],o=n[2],i=n[3].split(",").map((e=>e.trim())).filter((e=>!!e)),r=(e,n,t)=>`${o}(${i.map((o=>e.attrs.get(o).isInstanceAttr?o:(t||"")+o+n)).join(",")})`;return{type:"property",property:e,returnType:t,name:o,inputs:i,generate:r}}if(n=e.match(p)){const e="extrapolate"===n[1],t=n[2],o=n[3],i=n[4],r=n[5].split(",").map((e=>e.trim())).filter((e=>!!e)),s=(n,t,s,a)=>{const f=e?t:`clamp(${t},0.0,1.0)`;return`${o}=${i}(${r.map((e=>`mix(${e+s},${e+a},${f})`)).join(",")});`};return{type:"varying",returnType:t,name:o,getter:i,inputs:r,generate:s}}if(n=e.match(c)){return{type:"postproject",name:n[1]}}throw new Error(`Unrecognized lines pragma:"${e}"`)}function u(e){let n;const t=new Map,o=new Map;for(const r of e)"attribute"===r.type?(t.set(r.name,r),r.vertexUsage=i.NONE,r.endpointUsage=i.NONE):"varying"===r.type?o.set(r.name,r):"postproject"===r.type&&(n=r.name);let r,s,a;for(const n of e)if("property"===n.type){switch(n.property){case"width":if(r)throw new Error(`Unexpected duplicate pragma for property "${n.property}"`);r=n;break;case"position":if(s)throw new Error(`Unexpected duplicate pragma for property "${n.property}"`);s=n;break;case"orientation":if(a)throw new Error(`Unexpected duplicate pragma for property "${n.property}"`);a=n;break;default:throw new Error(`Invalid pragma property "${n.property}"`)}for(const e of n.inputs)if(!t.has(e))throw new Error(`Missing attribute ${e} of property ${n.property}`)}for(const n of e)if(n.inputs)for(const e of n.inputs){const o=t.get(e);o.isInstanceAttr?(o.vertexUsage=i.PER_INSTANCE,o.endpointUsage=i.PER_INSTANCE):"property"!==n.type&&"varying"!==n.type||("position"===n.property?(o.vertexUsage|=i.EXTENDED,o.endpointUsage|=i.EXTENDED):"orientation"===n.property?o.endpointUsage|=i.PER_INSTANCE:(o.endpointUsage|=i.REGULAR,o.vertexUsage|=i.REGULAR))}return{varyings:o,attrs:t,width:r,position:s,orientation:a,postproject:n}}const v=[];v[5120]=1,v[5122]=2,v[5124]=4,v[5121]=1,v[5123]=2,v[5125]=4,v[5126]=4;var h=function(e,n,t){const o={};if(!n)return o;for(let[i,r]of e.attrs){const e=n[i];if(!(t?r.endpointUsage:r.vertexUsage))continue;const s={buffer:null,dimension:r.dimension,offset:0,type:NaN,stride:NaN,divisor:1,bytesPerElement:NaN};if(!e)throw new Error(`Missing buffer for ${t?"endpoint":"vertex"} attribute '${i}'`);if("buffer"===e._reglType)s.buffer=e,s.type=s.buffer._buffer.dtype;else{if(!e.buffer||"buffer"!==e.buffer._reglType)throw new Error(`Invalid buffer for attribute '${i}'. Be sure to wrap in regl.buffer().`);if(s.buffer=e.buffer,y(e,"dimension")&&e.dimension!==s.dimension)throw new Error(`Size of attribute(${e.dimension})does not match dimension specified in shader pragma(${r.dimension})`);y(e,"offset")&&(s.offset=e.offset),y(e,"type")?s.type=g[e.type]:s.type=s.buffer._buffer.dtype,y(e,"divisor")&&(s.divisor=e.divisor),y(e,"stride")&&(s.stride=e.stride)}s.bytesPerElement=m[s.type],Number.isNaN(s.stride)&&(s.stride=s.bytesPerElement*r.dimension),o[i]=s}return o};const m=v,g={int8:5120,int16:5122,int32:5124,uint8:5121,uint16:5123,uint32:5125,float:5126,float32:5126};function y(e,n){return Object.prototype.hasOwnProperty.call(e,n)}const C=[];C[1]="float",C[2]="vec2",C[3]="vec3",C[4]="vec4";var b=function(e,n,t){const o=t?["B","C","D"]:["A","B","C","D"],i=[],r=[];return e.attrs.forEach(((e,n)=>{const s=t?e.endpointUsage:e.vertexUsage;if(!s)return;const a=[];function f(o,i){const f=n+i;if(a.push(f),t){const t=s&w.PER_INSTANCE?1:3;r.push({name:f,spec:{buffer:(e,t)=>t.buffers[n].buffer,offset:e.isInstanceAttr?(e,t)=>t.buffers[n].offset+t.buffers[n].stride*o:(e,t)=>t.buffers[n].offset+t.buffers[n].stride*((t.orientation!==B.CAP_START&&t.splitCaps?3:0)+o),stride:(e,o)=>o.buffers[n].stride*t*(o.splitCaps?2:1),divisor:(t,o)=>(e.isInstanceAttr?1:o.instances)*o.buffers[n].divisor}})}else r.push({name:f,spec:{buffer:(e,t)=>t.buffers[n].buffer,offset:(e,t)=>t.buffers[n].offset+t.buffers[n].stride*o,stride:(e,t)=>t.buffers[n].stride,divisor:(t,o)=>(e.isInstanceAttr?1:o.instances)*o.buffers[n].divisor}})}if(s&w.PER_INSTANCE&&f(0,""),s&w.REGULAR||s&w.EXTENDED)for(let e=0;e<o.length;e++){const n=o[e];(s&w.EXTENDED||"D"!==n&&"A"!==n)&&f(e,n)}i.push(`attribute ${x[e.dimension]} ${a.join(",")};`)})),e.varyings.forEach(((e,n)=>{i.push(`varying ${e.returnType} ${n};`)})),{glsl:i.join("\n"),attrs:r}};const w=o,x=C,B=e;const A=t,_=r,$=h,E=b,D=function(e,n,t){return function(o){if(!o)return t;if(-1===n.indexOf(o))throw new Error(`Invalid ${e} type. Valid options are:${n.join(",")}.`);return o}},T=e;var I=k;k.CAP_START=T.CAP_START,k.CAP_END=T.CAP_END;const R=new Set(["attributes","elements"]),j=["round","bevel","miter"],N=["round","square","none"],P=[1,1],S=[2,2/Math.sqrt(3)];function M(e,n,t){return(e?1:0)+(n?2:0)+(t?4:0)}function k(e,n={}){if(!e.hasExtension("ANGLE_instanced_arrays"))throw new Error("regl-gpu-lines requries the ANGLE_instanced_arrays extension");const{vert:t=null,frag:o=null,debug:i=!1,reorder:r=!1}=n;e._gpuLinesCache||(e._gpuLinesCache={});const s=e._gpuLinesCache,a={...n},f=n.uniforms||{};for(const e of["vert","frag","debug","reorder","uniforms"])delete a[e];if(Object.keys(a).forEach((e=>{if(R.has(e))throw new Error(`Invalid parameter '${e}'. Parameters ${[...R].map((e=>`'${e}'`)).join(",")} may not be forwarded to regl.`)})),!t)throw new Error("Missing vertex shader,`vert`");if(!o)throw new Error("Missing fragment shader,`frag`");const p=_(t),c=E(p,e,!1),l=E(p,e,!0),d=[];i&&(s.debugInstanceIDBuffer||(s.debugInstanceIDBuffer=e.buffer(new Uint16Array([...Array(16384).keys()]))),d.push({name:"debugInstanceID",spec:{buffer:s.debugInstanceIDBuffer,divisor:(e,n)=>n.instances}})),s.indexBuffer||(s.indexBuffer=e.buffer(new Uint8Array([...Array(134).keys()]))),d.push({name:"index",spec:{buffer:s.indexBuffer,divisor:0}});const u=D("join",j,"miter"),v=D("cap",N,"square"),h=new Map;function m(n){return h.has(n)||h.set(n,A(e,1&n,2&n,4&n,p,o,c,l,d,a,f,i)),h.get(n)}const g=[];function y(...e){g.push.apply(g,e)}function C(){r&&g.sort((function(e,n){return e.featureMask-n.featureMask}));let e=0;const n=[];for(;e<g.length;){const{featureMask:t,props:o}=g[e];for(n.push(o);++e<g.length&&g[e].featureMask===t;)n.push(g[e].props);m(t)(n),n.length=0}g.length=0}const b=function(e){if(e){Array.isArray(e)||(e=[e]);for(const n of e){const e=u(n.join),t=v(n.cap),o=!!n.vao;let i=void 0===n.capResolution?12:n.capResolution;"square"===t?i=3:"none"===t&&(i=1);let r=1;"round"===e&&(r=void 0===n.joinResolution?8:n.joinResolution),i*=2,r*=2;const s="bevel"===e?1:void 0===n.miterLimit?4:n.miterLimit,a="square"===t?S:P,f=!!n.insertCaps,c={joinRes2:r,capRes2:i,capScale:a,join:e,miterLimit:s,insertCaps:f};if(n.endpointCount){const e={instances:1,count:n.endpointCount,...n,...c};let t=M(!0,f,o);if(o)if(p.orientation){const n={vao:e.vao.endpoints};y({featureMask:t,props:{...e,...n}})}else{const n={vao:e.vao.startCaps},o={vao:e.vao.endCaps};y({featureMask:t,props:{...e,...n,orientation:T.CAP_START,splitCaps:!0}},{featureMask:t,props:{...e,...o,orientation:T.CAP_END,splitCaps:!0}})}else e.buffers=$(p,n.endpointAttributes,!0),p.orientation?y({featureMask:t,props:{...e,splitCaps:!1}}):y({featureMask:t,props:{...e,orientation:T.CAP_START,splitCaps:!0}},{featureMask:t,props:{...e,orientation:T.CAP_END,splitCaps:!0}})}if(void 0===n.instances&&(n.instances=1),n.vertexCount){const e=M(!1,f,o),t={count:n.vertexCount,...n,...c};o?t.vao=n.vao.vertices:t.buffers=$(p,n.vertexAttributes,!1),y({featureMask:e,props:t})}C()}}};return b.vao=function(n){const t={},o=[["vertices",c.attrs,n.vertexAttributes,!1]];p.orientation?o.push(["endpoints",l.attrs,n.endpointAttributes,!0,!1,null]):o.push(["startCaps",l.attrs,n.endpointAttributes,!0,!0,T.CAP_START],["endCaps",l.attrs,n.endpointAttributes,!0,!0,T.CAP_END]);for(const[n,i,r,s,a,f]of o){if(!r)continue;const o={buffers:$(p,r,s),splitCaps:a,orientation:f},c=[];for(const e of d.concat(i)){const n={};for(const t of["buffer","divisor","offset","stride","normalized","dimension"]){let i=e.spec[t];i&&i.data&&(i=i.data),"function"==typeof i&&(i=i({},o)),void 0!==i&&(n[t]=i)}c.push(n)}t[n]=e.vao(c)}return t.destroy=function(){for(const[e]of o)t[e]&&(t[e].destroy(),delete t[e])},t},b}return I}));